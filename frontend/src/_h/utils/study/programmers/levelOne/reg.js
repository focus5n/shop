
const text = `대나무 빨대 구입 문의 : http://dogumaster.com http://google.com 010-1111-2222 02-333-7777 curryyou@aaa.com`;

const result = text.match(/\d{2,3}-\d{3,4}-\d{4}/g);

console.log(result)





// i
// Ignore Case
// 대소문자를 구별하지 않고 검색한다.


// g
// Global
// 문자열 내의 모든 패턴을 검색한다.


// m
// Multi Line
// 문자열의 행이 바뀌더라도 검색을 계속한다.


// s
// ​
// .​(모든 문자 정규식)이 개행 문자 \n도 포함하도록


// u
// unicode
// 유니코드 전체를 지원


// y
// sticky
// 문자 내 특정 위치에서 검색을 진행하는 ‘sticky’ 모드를 활성화

// a-zA-Z
// 영어알파벳(-으로 범위 지정)


// ㄱ-ㅎ가-힣
// 한글 문자(-으로 범위 지정)


// 0-9
// 숫자(-으로 범위 지정)


// .
// 모든 문자열(숫자, 한글, 영어, 특수기호, 공백 모두! 단, 줄바꿈X)


// \d
// 숫자


// \D
// 숫자가 아닌 것


// \w
// 밑줄 문자를 포함한 영숫자 문자에 대응[A-Za-z0-9_] 와 동일


// \W
// \w 가 아닌 것


// \s
// space 공백


// \S
// space 공백이 아닌 것


// \특수기호
// 특수기호\* \^ \& \! \? ...등


// \b
// 63개 문자(영문 대소문자 52개 + 숫자 10개 + _(underscore))가 아닌 나머지 문자에 일치하는 경계(boundary)


// \B
// 63개 문자에 일치하는 경계


// \x
// 16진수 문자에 일치, /\x61/는 a에 일치


// \0
// 8진수 문자에 일치, /\141/은 a에 일치


// \u
// 유니코드(Unicode) 문자에 일치, /\u0061/는 a에 일치


// \c
// 제어(Control) 문자에 일치


// \f
// 폼 피드(FF, U+000C) 문자에 일치


// \n
// 줄 바꿈(LF, U+000A) 문자에 일치


// \r
// 캐리지 리턴(CR, U+000D) 문자에 일치


// \t
// 탭 (U+0009) 문자에 일치





// 기호
// 의미


// |
// ORa|b


// []
// 괄호안의 문자들 중 하나. or처리라 보면 된다./abc/ "abc"를 포함하는/[abc]/ "a" 또는 "b" 또는 "c" 를 포함하는[다-바] 다 or 라 or 마 or 바


// [^문자]
// 괄호안의 문자를 제외한 것[^lgEn] "l" "g" "E" "N" 4개 문자를 제외


// ^문자열
// 특정 문자열로 시작(괄호 없음 주의!)/^www/


// 문자열$
// 특정 문자열로 끝남/com$/


// ?
// 없거나 or 최대 한개만/apple?/


// *
// 없거나 or 있거나 (여러개)/Wo*/


// +
// 최소 한개 or 여러개/Wo+/


// *?
// 없거나,있거나 && 없거나,최대한개 = 없음{0}와 동일


// +?
// 최소한개,있거나 && 없거나,최대한개 = 한개{1}와 동일


// {n}
// n개


// {Min,}
// 최소 Min개 이상


// {Min, Max}
// 최소 Min개 이상, 최대 Max개 이하{3,5}? == {3}와 동일
